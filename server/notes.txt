 - Tab is weird:
   * If we send `echo "\t"\n` in one go, then \a shows up on the line and in
     the output.
   * If we send `echo "\t` and `"\n` separately, then \a shows up on the line
     but not in the output.
   * On the line editor, a \t is turned into spaces and the number of spaces
     changes if you insert characters in front. However, if you, e.g. echo the
     \t, a \t is emitted.
   * Todo: check how this corresponds to pasting these sequences "atomically"
     into a terminal
   * Todo: the above behavior is about sending chars into bash. Is bash doing
     this transformation or is the kernel doing this somewhere? Pumping the
     same chars into `cat` may help answer this.

 - Emulator references:
   * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
   * http://bjh21.me.uk/all-escapes/all-escapes.txt
   * http://vt100.net/docs/vt100-ug/chapter3.html
   * Relevant standards: ANSI X3.64, ECMA-48
   * `man terminfo` and `infocmp`

 - An interesting example command to run:
     ./main.native tty -term xterm -cwd /tmp -env TERM=xterm -exe /usr/bin/vim -- vim | tee /tmp/x
   I'm unsure why, but vim just continually outputs characters...

 - If you use vt100, it doesn't spew output constantly.

 - Weirdly, if you launch it with no environment, it doesn't do anything for a
   while (a few minutes?). This is weird b/c if I run vim in an actual terminal
   (with all environment variables removed) it runs fine. Maybe bash always
   reexports the 'term' variable? (this should also be easy to check)

 - Here's an example command to run which "works":

   ./main.native tty -cwd "/tmp" -env TERM=xterm -term xterm -exe "/bin/echo" -- "echo" "hello"
